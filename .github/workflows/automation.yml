name: Build a Telegram Monobank Bot

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

env:
  CONTAINER_NAME: "nickmonobot"

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: mukolla/monobot
      -
        name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Deploy to my Server via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST_SERVER_IP }}
          username: ${{ secrets.HOST_SERVER_USERNAME }}
          key: ${{ secrets.HOST_SERVER_SSHKEY }}
          envs: CONTAINER_NAME
          script: |
            # Stop running container
            docker stop $(echo $CONTAINER_NAME) || true
            
            # Remove old container
            docker rm $(echo $CONTAINER_NAME) || true
            
            # Set env variables
            export TOKEN=${{ secrets.TOKEN }}
            
            # Run a new container from a new image
            docker run -e TOKEN -d \
            --restart always \
            --name $(echo $CONTAINER_NAME) \
            mukolla/monobot:latest